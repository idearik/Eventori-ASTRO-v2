---
import EventCard from '../components/EventCard.astro';
import events from '../data/events.json';

const now = new Date();
const upcomingEvents = events.filter(event => new Date(event.date) >= now);
const pastEvents = events.filter(event => new Date(event.date) < now);
---

<html>
<head>
  <title>Eventori</title>
  <link rel="stylesheet" href="/styles/global.css">
  <style>
	/* Global styles */
body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  margin: 0;
  padding: 0;
  background-color: #121212;
  color: #e0e0e0;
  display: flex;
  flex-direction: column;
  align-items: center;
}

h1 {
  margin: 20px 0;
  font-size: 2rem;
  color: #fff;
  background-color: #1d1d1d;
  padding: 10px 20px;
  border-radius: 10px;
}

.button-container {
  display: flex;
  gap: 10px;
  margin: 20px;
}

button {
  background-color: #1a73e8;
  color: white;
  border: none;
  border-radius: 5px;
  padding: 10px 20px;
  font-size: 1rem;
  cursor: pointer;
  transition: background-color 0.3s, transform 0.3s;
}

button:hover {
  background-color: #1358a8;
  transform: scale(1.05);
}

button:active {
  transform: scale(1);
}

#events-container {
  width: 100%;
  max-width: 1200px;
  padding: 0 20px;
}

.event-list {
  display: flex;
  flex-direction: column;
  gap: 15px;
}

.event-card {
  border: 1px solid #333;
  border-radius: 10px;
  padding: 20px;
  background-color: #1d1d1d;
  color: #e0e0e0;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
  transition: box-shadow 0.3s, transform 0.3s;
  text-decoration: none;
  display: block;
}

.event-card:hover {
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.5);
  transform: translateY(-5px);
}

.past-event {
  filter: grayscale(100%);
}

/* Mobile responsiveness */
@media (max-width: 768px) {
  .button-container {
    flex-direction: column;
  }

  button {
    width: 100%;
    margin-bottom: 10px;
  }
}

  </style>
</head>
<body>
  <h1>Eventori</h1>
  
  <div class="button-container">
    <button id="upcoming-btn">Upcoming Events</button>
    <button id="past-btn">Past Events</button>
  </div>
  
  <div id="events-container">
    <div id="upcoming-events" class="event-list">
      {upcomingEvents.map(event => (
        <EventCard
          name={event.name}
          date={event.date}
          endDate={event.endDate}
          location={event.location}
          status={event.status}
          description={event.description}
          url={event.url}
          isPast={false}
        />
      ))}
    </div>
    
    <div id="past-events" class="event-list" style="display: none;">
      {pastEvents.map(event => (
        <EventCard
          name={event.name}
          date={event.date}
          endDate={event.endDate}
          location={event.location}
          status={event.status}
          description={event.description}
          url={event.url}
          isPast={true}
        />
      ))}
    </div>
  </div>
  
  <script>
    document.getElementById('upcoming-btn').addEventListener('click', () => {
      document.getElementById('upcoming-events').style.display = 'block';
      document.getElementById('past-events').style.display = 'none';
    });

    document.getElementById('past-btn').addEventListener('click', () => {
      document.getElementById('upcoming-events').style.display = 'none';
      document.getElementById('past-events').style.display = 'block';
    });
  </script>
</body>
</html>
